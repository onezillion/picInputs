# Copyright 2013-2023 Rene Widera, Felix Schmitt, Axel Huebl, Franz Poeschel
#
# This file is part of PIConGPU.
#
# PIConGPU is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PIConGPU is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PIConGPU.
# If not, see <http://www.gnu.org/licenses/>.
#

##
## This configuration file is used by PIConGPU's TBG tool to create a
## batch script for PIConGPU runs. For a detailed description of PIConGPU
## configuration files including all available variables, see
##
##                 docs/TBG_macros.cfg.
##


#################################
## Section: Required Variables ##
#################################

TBG_wallTime="00:15:00"

# This config fills a node of Crusher (though it does not nearly use all
# available memory).
# Scaling it in combination with crusher_ornl/batch_pipe.tpl is possible by
# picking a multiple-of-eight number of devices here.

TBG_devices_x=1
TBG_devices_y=2
TBG_devices_z=2

TBG_gridSize="128 256 32"
TBG_steps="400"

TBG_periodic="--periodic 1 1 1"


#################################
## Section: Optional Variables ##
#################################

# The "rank_table"="hostname" parameter makes openPMD send additional data, that
# the reader can use to find out which MPI rank was running on which host.
# It requires this branch/PR: https://github.com/openPMD/openPMD-api/pull/824,
# will be ignored otherwise.
# Use with care, it currently does not work in file-based iteration encoding
# and will crash.
#
# The "MarshalMethod"="bp5" is an undocumented ADIOS2 parameter.
# Setting it makes the "InitialBufferSize" parameter unnecessary.
# It will however not send `vector<string>`-type attributes correctly, so if
# those are needed, the default MarshalMethod needs to be used.
# The "InitialBufferSize" is left in the config to make switiching back to the
# default "MarshalMethod"="bp3" easier.
TBG_PIC_config="\
{ \
  \"rank_table\": \"posix_hostname\", \
  \"iteration_encoding\": \"variable_based\", \
  \"adios2\": { \
    \"use_group_table\": true, \
    \"attribute_writing_ranks\": 0, \
    \"engine\": { \
      \"parameters\": { \
        \"QueueLimit\": \"1\", \
        \"DataTransport\": \"!TBG_DataTransport\", \
        \"Profile\": \"Off\", \
        \"Threads\": \"!TBG_coresPerGPU\", \
        \"MarshalMethod\": \"BP5\" \
      } \
    } \
  } \
} \
"

# Use mappedMemory data preparation strategy by default due to lower memory
# consumption. Can be switched to doubleBuffer on some systems.
TBG_openPMD="--openPMD.period 100                          \
            --openPMD.file simData                         \
            --openPMD.infix NULL                           \
            --openPMD.ext sst                              \
            --openPMD.dataPreparationStrategy mappedMemory \
            --openPMD.json '!TBG_PIC_config'"
TBG_streamdir="openPMD/simData.sst"
TBG_dumpdir="openPMD/simData.bp"

TBG_plugins="!TBG_openPMD"

TBG_inconfig_pipe="\
{ \
    \"adios2\": { \
        \"engine\": { \
            \"parameters\": { \
                \"DataTransport\": \"!TBG_DataTransport\", \
                \"Profile\": \"Off\", \
                \"OpenTimeoutSecs\": \"600\", \
                \"SpeculativePreloadMode\": \"OFF\" \
            } \
        } \
    } \
} \
"

# Use nullcore engine which does nothing.
# This way, the sink will load all data and then discard it.
# In order to put it on disk, use an engine like bp4 or bp5,
# or use the HDF5 backend altogether.
TBG_outconfig_pipe="\
{ \
    \"adios2\": { \
        \"attribute_writing_ranks\": 0, \
        \"engine\": { \
            \"usesteps\": true, \
            \"type\": \"nullcore\", \
            \"parameters\": { \
                \"Threads\": \"!TBG_coresPerPipeInstance\" \
            } \
        } \
    } \
} \
"


#################################
## Section: Program Parameters ##
#################################

TBG_deviceDist="!TBG_devices_x !TBG_devices_y !TBG_devices_z"

TBG_programParams="-d !TBG_deviceDist \
                   -g !TBG_gridSize   \
                   -s !TBG_steps      \
                   !TBG_periodic      \
                   !TBG_plugins       \
                   --versionOnce"

# TOTAL number of devices
TBG_tasks="$(( TBG_devices_x * TBG_devices_y * TBG_devices_z ))"

"$TBG_cfgPath"/submitAction.sh
